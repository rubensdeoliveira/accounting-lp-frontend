generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?
  company_id    String?
  company       Company?  @relation(fields: [company_id], references: [id])
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Document {
  id             String   @id @default(uuid())
  reference_date DateTime
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  document_url   String
  company        Company  @relation(fields: [company_id], references: [id])
  company_id     String
}

model AllowedUser {
  id    String @id @default(uuid())
  email String @unique
}

model Company {
  id           String     @id @default(uuid())
  name         String     @unique
  cnpj         String?
  ie           String?
  phone        String?
  cep          String?
  street       String?
  neighborhood String?
  number       String?
  city         String?
  state        String?
  documents    Document[]
  users        User[]
}
